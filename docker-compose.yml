services:
  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    volumes:
      - ./backend:/var/www
    networks:
      - app-network
    depends_on:
      - db
      - redis

  # Nginx pentru ambele aplica»õii
  nginx:
    image: nginx:alpine
    container_name: nginx_server
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
      - ./backend:/var/www
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laraveluser
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: ["redis-server", "--save", "20 1", "--loglevel", "warning"]
networks:
  app-network:
    driver: bridge
